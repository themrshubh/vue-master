{"remainingRequest":"/Users/shubhammankar/Documents/Nudron/tables-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shubhammankar/Documents/Nudron/tables-demo/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/shubhammankar/Documents/Nudron/tables-demo/src/App.vue","mtime":1594306547151},{"path":"/Users/shubhammankar/Documents/Nudron/tables-demo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shubhammankar/Documents/Nudron/tables-demo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/shubhammankar/Documents/Nudron/tables-demo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/shubhammankar/Documents/Nudron/tables-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shubhammankar/Documents/Nudron/tables-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm5vU2Nyb2xsQmFyOjotd2Via2l0LXNjcm9sbGJhciB7CiAgZGlzcGxheTogbm9uZTsKfQouYi10YWJsZSA+IHRib2R5ID4gdHIgewogIGN1cnNvcjogcG9pbnRlcgp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <b-container fluid>\n      <b-row class=\"mt-5\">\n        <b-col>\n          <h2 class=\"text-center\">Tables Prototype</h2>\n        </b-col>\n      </b-row>\n      <b-row class=\"mt-5\">\n        <b-col>\n            <b-table \n            selectable hover bordered \n            sticky-header=\"450px\" \n            select-mode=\"single\" \n            selected-variant=\"primary\" \n            ref=\"table1\" \n            :items = 'items' \n            @row-clicked=\"clicked\">\n            </b-table>\n        </b-col>\n        <b-col>\n            <!-- <b-table hover bordered sticky-header=\"450px\" ref=\"table2\" :items = 'zones' @row-clicked=\"fetchNewMeters\"></b-table> -->\n            <b-card style=\"width:100%;height:450px\">\n              <div v-if=\"selectedItem == null\" class=\"text-center mt-5\">I am showing default info</div>\n              <div v-else class=\"text-center mt-5\">\n                You clicked on <span class=\"text-danger\">{{ selectedItem.name }}</span>. <br>\n                So now I'm showing that information.\n              </div>\n            </b-card>\n        </b-col>\n        <b-col>\n            <!-- <b-table hover bordered sticky-header=\"450px\" ref=\"table3\" :items = 'building'></b-table> -->\n            <b-card style=\"width:100%;height:450px\">\n              <div v-if=\"selectedItem == null\" class=\"text-center mt-5\">I am showing default info</div>\n              <div v-else class=\"text-center mt-5\">\n                You clicked on <span class=\"text-danger\">{{ selectedItem.name }}</span>. <br>\n                So now I'm showing that information.\n              </div>\n            </b-card>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\n\n\nexport default {\n  name: 'App',\n  created(){\n    this.fetchNewAreas()\n\n  },\n  mounted(){\n    const tab1 = this.$refs['table1'].$el\n    tab1.addEventListener('scroll', this.onScroll)\n  },\n  data(){\n    return {\n      currentArea: 0,\n      selectedItem:null,\n      items: []\n      // zones: [\n      //   {name: 'Default Zone 1', alerts: 0, dues: 0},\n      //   {name: 'Default Zone 2', alerts: 0, dues: 0},\n      //   {name: 'Default Zone 3', alerts: 0, dues: 0},\n      //   {name: 'Default Zone 4', alerts: 0, dues: 0},\n      //   {name: 'Default Zone 5', alerts: 0, dues: 0},\n      //   {name: 'Default Zone 6', alerts: 0, dues: 0},\n      //   {name: 'Default Zone 7', alerts: 0, dues: 0},\n      //   {name: 'Default Zone 8', alerts: 0, dues: 0},\n      //   {name: 'Default Zone 9', alerts: 0, dues: 0},\n      //   {name: 'Default Zone 10', alerts: 0, dues: 0}\n      // ],\n      // building: [\n      //   {name: 'Meter 1', alerts: 0, dues: 0},\n      //   {name: 'Meter 2', alerts: 0, dues: 0},\n      //   {name: 'Meter 3', alerts: 0, dues: 0},\n      //   {name: 'Meter 4', alerts: 0, dues: 0},\n      // ]\n    }\n  },\n  methods: {\n    clicked(item){\n      this.selectedItem = item\n    },\n    onScroll(event){\n      if(event.target.scrollTop + event.target.clientHeight == event.target.scrollHeight){\n        this.fetchNewAreas()\n        console.log(this.selectedItem)\n      }\n    },\n    fetchNewAreas(){\n      for(let i = 1; i < 11; i++){\n        this.items.push({\n          name: 'Area ' + (this.currentArea + i),\n          alerts: Math.floor(Math.random() * 600),\n          dues: Math.floor(Math.random() * 300),\n        })\n      }\n      this.currentArea += 10 \n    },\n  }\n}\n</script>\n\n<style>\n.noScrollBar::-webkit-scrollbar {\n  display: none;\n}\n.b-table > tbody > tr {\n  cursor: pointer\n}\n</style>\n"]}]}